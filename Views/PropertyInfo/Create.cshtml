@model mvcApp.Models.ApplicationUser
@{
    ViewData["Title"] = "Property Management";
}

<h2>Create Property</h2>

<dt class="col-sm-4">
    @Html.DisplayNameFor(model => model.Id)
</dt>
<dd class="col-sm-4">
    @Html.DisplayFor(model => model.Id)
</dd>

<dt class="col-sm-4">
    @Html.DisplayNameFor(model => model.UserName)
</dt>
<dd class="col-sm-4">
    @Html.DisplayFor(model => model.UserName)
</dd>


<form>
    <div class="mb-3">
        <label class="form-label" for="fname">Asset Name:</label>
        <input class="form-control"  type="text" id="Name" name="Name" placeholder="Asset Name" />
    </div>

    <div class="mb-3">
        <label class="form-label" for="fname">Asset Type:</label><br>
        <input class="form-control"  type="text" id="Type" name="Type" placeholder="Asset Type" />
    </div>

    <div class="mb-3">
        <label class="form-label" for="fname">Asset Description:</label>
        <input class="form-control"  type="text" id="Description" name="Description" placeholder="Description" />
        <input type="text" id="UserId" name="UserId" placeholder="Id" value="@Model.Id" hidden=True />
    </div>
    <input value="Create" class="btn btn-primary" onclick="CreatePropertyInfo()">
</form>


<script type="text/javascript">
    function CreatePropertyInfo() {
        $.ajax({
            type: "POST",
            url: "/PropertyInfo/CreatePropertyInfo",
            data: {
                "Name": $(Name).val(),
                "Type": $(Type).val(),
                "Description": $(Description).val(),
                "UserId": $(UserId).val()
            },
            success: function (response) {
                window.location.href = "/PropertyInfo/Details/" + '@Model.Id';
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }

        });
    };
</script>
